<?xml version="1.0" encoding="utf-8" standalone="yes"?><?xml-stylesheet href="/feed_style.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="https://www.rssboard.org/media-rss">
  <channel>
    <title>Networking on evnmrk.xyz</title>
    <link>http://localhost:1313/tags/networking/</link>
    <description>Recent content in Networking on evnmrk.xyz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 15 Sep 2023 22:49:48 -0700</lastBuildDate><atom:link href="http://localhost:1313/tags/networking/index.xml" rel="self" type="application/rss+xml" /><icon>http://localhost:1313/apple-touch-icon.png</icon>
    
    
    <item>
      <title>ångstromCTF 2023 - Simon Says Writeup</title>
      <link>http://localhost:1313/posts/actf23-simon-says/</link>
      <pubDate>Fri, 15 Sep 2023 22:49:48 -0700</pubDate>
      
      <guid>http://localhost:1313/posts/actf23-simon-says/</guid>
      <description><![CDATA[<h1 id="introduction">Introduction</h1>
<p>This (very late) writeup is for the <a href="https://2023.angstromctf.com/">2023 ångstromCTF</a> &ldquo;Simon Says&rdquo; misc challenge. This challenge involved using netcat to answer three questions in a very short time frame. The three questions are very similar. It involved taking the first three letters of one word and concatenating them with the last three letters of a second word. I wrote a perl script to connect to the TCP connection, read the two words, concatenate a new word, and send it back, repeating until the flag is given.</p>
<h1 id="perl-script">Perl Script</h1>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-perl" data-lang="perl"><span style="display:flex;"><span><span style="color:#0f0">#!/usr/bin/perl</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f00">use</span> strict;
</span></span><span style="display:flex;"><span><span style="color:#f00">use</span> warnings;
</span></span><span style="display:flex;"><span><span style="color:#f00">use</span> IO::Socket;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f00">my</span> <span style="color:#eedd82">$remote_host</span> = <span style="color:#87ceeb">&#34;challs.actf.co&#34;</span>;
</span></span><span style="display:flex;"><span><span style="color:#f00">my</span> <span style="color:#eedd82">$remote_port</span> = <span style="color:#f60">31402</span>;
</span></span><span style="display:flex;"><span><span style="color:#f00">my</span> <span style="color:#eedd82">$buf</span> = <span style="color:#87ceeb">&#34;&#34;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#0f0"># Example question:</span>
</span></span><span style="display:flex;"><span><span style="color:#0f0"># Combine the first 3 letters of vulture with the last 3 letters of dolphin</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f00">my</span> <span style="color:#eedd82">$socket</span> = IO::Socket-&gt;<span style="color:#f00">new</span>(
</span></span><span style="display:flex;"><span>    Domain   =&gt; IO::Socket::AF_INET,
</span></span><span style="display:flex;"><span>    PeerAddr =&gt; <span style="color:#eedd82">$remote_host</span>,
</span></span><span style="display:flex;"><span>    PeerPort =&gt; <span style="color:#eedd82">$remote_port</span>,
</span></span><span style="display:flex;"><span>    Proto    =&gt; <span style="color:#87ceeb">&#34;tcp&#34;</span>,
</span></span><span style="display:flex;"><span>    Type     =&gt; IO::Socket::SOCK_STREAM)
</span></span><span style="display:flex;"><span>or die <span style="color:#87ceeb">&#34;Couldn&#39;t connect to $remote_host:$remote_port : $@\n&#34;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span><span style="color:#f00">while</span> (<span style="color:#f60">1</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#eedd82">$socket</span>-&gt;recv(<span style="color:#eedd82">$buf</span>, <span style="color:#f60">8192</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#f00">print</span> <span style="color:#eedd82">$buf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#f00">if</span> (<span style="color:#eedd82">$buf</span> =~<span style="color:#87ceeb"> /actf.*/</span>) {<span style="color:#f00">last</span>;}
</span></span><span style="display:flex;"><span>    <span style="color:#f00">my</span> <span style="color:#eedd82">$data</span> = <span style="color:#eedd82">$buf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#f00">if</span> (<span style="color:#eedd82">$data</span> =~<span style="color:#87ceeb"> /Combine the first 3 letters of (\w+) with the last 3 letters of (\w+)/</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#f00">my</span> <span style="color:#eedd82">$first</span> = substr <span style="color:#eedd82">$1</span>, <span style="color:#f60">0</span>, <span style="color:#f60">3</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#f00">my</span> <span style="color:#eedd82">$last</span> = substr <span style="color:#eedd82">$2</span>, -<span style="color:#f60">3</span>, <span style="color:#f60">3</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#f00">my</span> <span style="color:#eedd82">$string</span> = <span style="color:#eedd82">$first</span> . <span style="color:#eedd82">$last</span> . <span style="color:#87ceeb">&#34;\n&#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#f00">print</span>(<span style="color:#87ceeb">&#34;sending: $string&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#eedd82">$socket</span>-&gt;send(<span style="color:#eedd82">$string</span>)
</span></span><span style="display:flex;"><span>        or die <span style="color:#87ceeb">&#34;Can&#39;t send: $!\n&#34;</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>close(<span style="color:#eedd82">$socket</span>);
</span></span></code></pre></div><h1 id="result">Result</h1>
<p><img src="images/actf2023-simon-says.png" alt="" title="Terminal output of the successful perl script"></p>
<p>The script quickly solved the server&rsquo;s three questions which rewarded us with the challenge&rsquo;s flag. It should also be noted that I adapted this script from my friend Reid&rsquo;s python script, which originally solved the challenge for our team. I wanted to challenge myself by solving the flag with a perl script.</p>
]]></description>
      
    </item>
    
    
  </channel>
</rss>
